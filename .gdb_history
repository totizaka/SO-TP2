n
n
n
n
n
n
n
c
exit
dashboard -layout memory assembly registers stack source variables
b shell
c
b test_sync
b new_process
b process_wrapper
b wait
b my_wait
b combie
b zombie
c
n
n
n
n
n
n
n
n
n
n
n
n
b test_prio
n
n
n
n
n
n
n
c
c
c
c
c
c
n
p process->pid
n
b unblock_waiting_proc
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
exit
dashboard -layout memory assembly registers stack source variables
b shell
c
b command_wait
c
n
b run_simple_program
c
exit
dashboard -layout memory assembly registers stack source variables
b shell
c
b run_simple_program
c
n
b write_process_test
c
exit
dashboard -layout memory assembly registers stack source variables
b shell
b run_piped_program
b shell.c:332
c
c
n
p comands.pipe
n
b run_piped_program
n
n
n
n
n
n
n
b shell.c:278
c
n
n
b new_process
n
n
n
n
p fds[0]
p fds[1]
p fds[2]
n
b piping
n
p fds[0]
p fds[1]
p fds[2]
p role
p current
n
n
p current
p current->pid
p current->fds
p current->fd[0]
p current->fd[1]
p current->fd[2]
p fds
p fds[0]
p fds[1]
p fds[2]
p i
exit
dashboard -layout memory assembly registers stack source variables
b shell
b run_piped_program
c
c
n
b new_process
c
n
n
n
n
n
b piping
c
n
n
n
p current->fd[0]
p current->fd[1]
p current->fd[2]
n
b syscall_write
n
c
n
p target
n
b syscall_write_pipe
n
b write_pipe
n
p id
p invalid_ID_pipe(id)
p pipe_array[id].pids[PIPE_WRITE]
p pipe_array[id].pids[0]
p pipe_array[id].pids[1]
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b piping
c
n
n
p role
n
n
p PIPE_WRITE
p PIPE_WRITE
p fds[i]
b open_pipe
c
c
n
n
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b piping
c
b open_pipe
c
p id
p role
n
n
n
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b piping
c
b open_pipe
c
n
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b piping
b open_pipe
c
n
c
n
p pcb_table[1].pid
p pcb_table[2].pid
p pcb_table[2].state
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b process.c:156
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b scheduler
n
b ready
n
b ready_process
n
n
n
n
n
n
c
c
c
exit
