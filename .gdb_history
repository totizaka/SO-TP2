p i
exit
dashboard -layout memory assembly registers stack source variables
b shell
b run_piped_program
c
c
n
b new_process
c
n
n
n
n
n
b piping
c
n
n
n
p current->fd[0]
p current->fd[1]
p current->fd[2]
n
b syscall_write
n
c
n
p target
n
b syscall_write_pipe
n
b write_pipe
n
p id
p invalid_ID_pipe(id)
p pipe_array[id].pids[PIPE_WRITE]
p pipe_array[id].pids[0]
p pipe_array[id].pids[1]
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b piping
c
n
n
p role
n
n
p PIPE_WRITE
p PIPE_WRITE
p fds[i]
b open_pipe
c
c
n
n
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b piping
c
b open_pipe
c
p id
p role
n
n
n
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b piping
c
b open_pipe
c
n
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b piping
b open_pipe
c
n
c
n
p pcb_table[1].pid
p pcb_table[2].pid
p pcb_table[2].state
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b process.c:156
exit
dashboard -layout memory assembly registers stack source variables
b new_process
c
c
b scheduler
n
b ready
n
b ready_process
n
n
n
n
n
n
c
c
c
exit
dashboard -layout memory assembly registers stack source variables
b create_process_shell
b my_create_process_shell
c
p argv[0]
n
p argv[0]
p argv[1]
b new_process
c
n
p args_cpy
p args_cpy[0]
n
n
p current->argc
p current->args[0]
c
exit
dashboard -layout memory assembly registers stack source variables
b shell_loop
c
n
p argc
p argv[0]
exit
dashboard -layout memory assembly registers stack source variables
b keyboard_handler
c
b scheduler
exit
dashboard -layout memory assembly registers stack source variables
b keyboard_handler
c
n
n
p key_pressed
p key_pressed()
p scan_code
exit
dashboard -layout memory assembly registers stack source variables
b keyboard_handler
c
n
n
n
p scan_code
n
n
n
n
n
n
n
n
n
n
b scheduler
n
n
n
n
n
p c
n
c
c
exit
dashboard -layout memory assembly registers stack source variables
b keyboard_handler
c
n
n
exit
dashboard -layout memory assembly registers stack source variables
b keyboard_handler
c
n
n
p scan_code
c
n
n
p scan_code
c
c
c
n
n
p scan_code
exit
dashboard -layout memory assembly registers stack source variables
b keyboard_handler
read_stdin
b read_stdin
c
n
n
c
n
n
p scan_code
p scan_codes[scan_code]
n
p scan_codes[scan_code]
n
n
exit
dashboard -layout memory assembly registers stack source variables
b keyboard_handler
c
n
exit
dashboard -layout memory assembly registers stack source variables
b keyboard_handler
b stdin_read
b read_stdin
c
n
n
b my_get_string
c
n
p count
n
c
c
c
c
c
c
n
exit
